@charset "UTF-8";

container.bigbox {
    background-color: rgb(0, 255, 0);
    display: flex;
    /* SE QUEBRAR, ELE VAI NO SENTIDO DO CROSS-AXIS */
    flex-flow: row nowrap;
    justify-content: space-evenly;
    align-items: center;
    height: 100px;
    /* SHORTHAND DE FLEX DIRECTION E FLEX WRAP */
}

/* 
JUSTIFY CONTENT VAI FAZER O ALINHAMENTO NO MAIN-AXIS 
JUSTIFY CONTENT: FLEX-START - O PRIMEIRO VAI FICAR GRUDADO NO MAIN-START E SE TIVER ESPAÇO LIVRE VAI FICAR NO FINAL, NO MAIN-END

JUSTIFY CONTENT: FLEX-END - AO CONTRATO DO FLEX START, FICA NO GRUDADO NO MAIN-END

JUSTIFY CONTENT: CENTER - CALCULA O MEIO E COLOCAR OS ITENS CENTRALIZADOS

JUSTIFY CONTENT: SPACE-BETWEEN - COLOCA O PRIMEIRO ELEMENTO NO MAIN-START E O ULTIMO NO MAIN-END, O RESTANTE DOS ELEMENTOS VAO ESTAR DISTRIBUIDOS NO MEIO

JUSTIFY CONTENT: SPACE EVENLY - É O MESMO ESPAÇO ENTRE OS ELEMENTOS PARA TUDO, INCLUIDO O MAIN-START E MAIN-END

JUSTIFY CONTENT: SPACE-AROUND - VAI DIVIDIR O TAMANHO DO MEU CONTAINER PELO NUMERO DE ELEMENTOS E CENTRALIZAR OS ELEMENTOS NO CONTAINER, LEMBRANDO, CADA ELEMENTO TEM ESPAÇO DE COMEÇO E FIM.
*/

/* 
ALIGN-ITEMS VAI FAZER O ALINHAMENTO NO CROSS-AXIS
ALIGN-ITEMS: STRETCH - PADRAO, ELE VAI ESTICAR O ELEMENTO

ALIGN-ITEMS: FLEX-START - O PRIMEIRO VAI FICAR GRUDADO NO CROSS-START E SE TIVER ESPAÇO LIVRE VAI FICAR NO FINAL, NO CROSS-END

ALIGN-ITEMS: FLEX-END - AO CONTRATO DO FLEX-STAR, FICA GRUDADO NO CROSS-END

ALIGN-ITEMS: CENTER - CALCULA O MEIO E COLOCAR OS ITENS CENTRALIZADOS

*/

div.box {
    background-color: rgb(0, 0, 0);
    text-align: center;
    padding: 2px;
    border: 1px solid white;
}

p {
    color: rgb(255, 255, 255);
}

